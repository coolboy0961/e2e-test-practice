name: CICD

on:
  push:

jobs:
  component-test:
    runs-on: ubuntu-latest
    steps:
      - run: echo component-test
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: build
        run: |
          cd frontend
          npm ci
      - name: test
        run: |
          cd frontend
          npm run coverage

  api-test:
    runs-on: ubuntu-latest
    steps:
      - run: echo api-test
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
      - name: test
        run: |
          cd bff
          mvn test

  e2e-test:
    runs-on: ubuntu-latest
    needs: [component-test, api-test]
    steps:
      - run: echo e2e-test
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Setup Environment Variable
        run: |
          export TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE=/var/run/docker.sock
          export TESTCONTAINERS_RYUK_DISABLED=true
      - name: Docker Login
        run: docker login -u "${{ secrets.ORACLE_REGISTRY_USERNAME }}" -p "${{ secrets.ORACLE_REGISTRY_PASSWORD }}" container-registry.oracle.com
      - name: Install Docker Compose
        run: sudo apt-get install docker-compose
      - name: Install dependencies
        run: |
          cd e2e
          npm ci --force
      - name: Install browsers
        run: |
          cd e2e
          npx playwright install
      - name: Run E2E tests
        run: |
          cd e2e
          npm run test

  deploy:
    runs-on: ubuntu-latest
    needs: e2e-test
    steps:
      - run: echo Deploy
