version: '3'
services:
  ui:
    container_name: ui-container
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - bff

  bff:
    container_name: bff-container
    build:
      context: ../../helidon/helidon-quickstart-mp/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - core-api

  redis:
    container_name: redis-container
    image: redis:latest
    command: redis-server --appendonly yes --requirepass testpassword
    ports:
      - "6379:6379"
    environment:
      TZ: JST-9

  redisCommander:
    container_name: redis-commander-container
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: Redis:redis-container:6379:0:testpassword
      TZ: JST-9
    ports:
      - "7379:8081"
    depends_on:
      - redis

  core-api:
    container_name: core-api-container
    build:
      context: ../../core-api/
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - core-db

  core-db:
    container_name: core-db-container
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    volumes:
      - ./init-core-db:/docker-entrypoint-initdb.d  # ここでSQLファイルをマウント

  pgadmin:
    container_name: pgadmin-container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    command:
      - sh
      - -c
      - |
        /venv/bin/python3 setup.py --load-servers servers.json --user admin@example.com
        tail -f /dev/null
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - core-db

  external-api:
    container_name: external-api-container
    image: "holomekc/wiremock-gui:latest"
    ports:
      # This is just an example of a port mapping
      - "3001:3001"
    command:
      "--port 3001 --max-request-journal 1000 --local-response-templating --verbose"
    volumes:
      - ./wiremock:/home/wiremock

  # core-db:
  #   container_name: core-db-container
  #   image: container-registry.oracle.com/database/enterprise:21.3.0.0
  #   environment:
  #     ORACLE_SID: "ORCLCDB"
  #     ORACLE_PDB: "ORCLPDB1"
  #     ORACLE_PWD: "Passw0rd"
  #   ports:
  #     - "1521:1521"